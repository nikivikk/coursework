@page "/login"

@using MudBlazor
@using art_store.Services.Contract;
@using art_store.art_storeDto;
@inject IAuthenticationService AuthenticationService;
@inject NavigationManager NavManager;
@using System.ComponentModel.DataAnnotations

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Email" Class="mt-3"
                    @bind-Value="model.Email" For="@(() => model.Email)" />
                    <MudTextField Label="Password" HelperText="Enter your password" Class="mt-3"
                    @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Log in</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    LoginDto model = new();
    bool success;
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    private async Task OnValidSubmit(EditContext context)
    {
        var model = (LoginDto)context.Model;
        var result = await AuthenticationService.Login(model);

        if (result.IsSuccessful)
        {
            success = true;
        }
        else
        {
            NavManager.NavigateTo("/register");
        }
        StateHasChanged();
    }
}
